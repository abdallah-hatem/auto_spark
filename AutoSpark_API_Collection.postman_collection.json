{
  "info": {
    "name": "AutoSpark API Collection",
    "description": "Complete API collection for the AutoSpark backend service - a car wash booking platform",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\",\n  \"phone\": \"+1234567890\",\n  \"address\": \"123 Main St, City\",\n  \"lat\": 40.7128,\n  \"lng\": -74.0060,\n  \"role\": \"CUSTOMER\",\n  \"deviceToken\": \"device_token_here\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Register a new user (CUSTOMER or WASHER)"
          }
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.token) {",
                  "        pm.collectionVariables.set('authToken', response.data.token);",
                  "        console.log('Token saved to collection variable');",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            },
            "description": "Login user and get authentication token"
          }
        },
        {
          "name": "Get Current User Info",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "me"]
            },
            "description": "Get current authenticated user information"
          }
        },
        {
          "name": "Create Admin User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Admin User\",\n  \"email\": \"admin@autospark.com\",\n  \"password\": \"adminPassword123\",\n  \"phone\": \"+1234567891\",\n  \"address\": \"Admin Office\",\n  \"role\": \"ADMIN\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/admin",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "admin"]
            },
            "description": "Create a new admin user (Admin only)"
          }
        }
      ]
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/profile",
              "host": ["{{baseUrl}}"],
              "path": ["users", "profile"]
            },
            "description": "Get current user's profile information"
          }
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Name\",\n  \"address\": \"Updated Address\",\n  \"lat\": 40.7580,\n  \"lng\": -73.9855,\n  \"isAvailable\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}"],
              "variable": [
                {
                  "key": "userId",
                  "value": "user_id_here"
                }
              ]
            },
            "description": "Update user information"
          }
        }
      ]
    },
    {
      "name": "Services",
      "item": [
        {
          "name": "Get All Services",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/services?page=1&limit=10&search=",
              "host": ["{{baseUrl}}"],
              "path": ["services"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "search",
                  "value": ""
                }
              ]
            },
            "description": "Get all services with pagination and optional search"
          }
        },
        {
          "name": "Create Service",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"premium car wash\",\n  \"description\": \"Complete premium car wash service with wax\",\n  \"price\": 25.99\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/services",
              "host": ["{{baseUrl}}"],
              "path": ["services"]
            },
            "description": "Create a new service (Admin only)"
          }
        },
        {
          "name": "Update Service",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"updated service name\",\n  \"description\": \"Updated service description\",\n  \"price\": 29.99\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/services/{{serviceId}}",
              "host": ["{{baseUrl}}"],
              "path": ["services", "{{serviceId}}"],
              "variable": [
                {
                  "key": "serviceId",
                  "value": "service_id_here"
                }
              ]
            },
            "description": "Update an existing service (Admin only)"
          }
        },
        {
          "name": "Delete Service",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/services/{{serviceId}}",
              "host": ["{{baseUrl}}"],
              "path": ["services", "{{serviceId}}"],
              "variable": [
                {
                  "key": "serviceId",
                  "value": "service_id_here"
                }
              ]
            },
            "description": "Delete a service (Admin only)"
          }
        }
      ]
    },
    {
      "name": "Bookings",
      "item": [
        {
          "name": "Create Booking",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerId\": \"customer_id_here\",\n  \"washerId\": \"washer_id_here\",\n  \"serviceId\": \"service_id_here\",\n  \"status\": \"PENDING\",\n  \"scheduledAt\": \"2024-12-31T10:00:00Z\",\n  \"lat\": 40.7128,\n  \"lng\": -74.0060,\n  \"address\": \"123 Main St, New York, NY\",\n  \"price\": 25.99,\n  \"originalPrice\": 29.99,\n  \"couponId\": \"coupon_id_here\",\n  \"paymentId\": \"payment_id_here\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/booking",
              "host": ["{{baseUrl}}"],
              "path": ["booking"]
            },
            "description": "Create a new booking (Customer/Admin)"
          }
        },
        {
          "name": "Get All Bookings",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/booking?page=1&limit=10&status=&customerId=&washerId=",
              "host": ["{{baseUrl}}"],
              "path": ["booking"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "status",
                  "value": ""
                },
                {
                  "key": "customerId",
                  "value": ""
                },
                {
                  "key": "washerId",
                  "value": ""
                }
              ]
            },
            "description": "Get all bookings with pagination and filters (Admin only)"
          }
        },
        {
          "name": "Get Booking by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/booking/{{bookingId}}",
              "host": ["{{baseUrl}}"],
              "path": ["booking", "{{bookingId}}"],
              "variable": [
                {
                  "key": "bookingId",
                  "value": "booking_id_here"
                }
              ]
            },
            "description": "Get a specific booking by ID (Admin only)"
          }
        },
        {
          "name": "Update Booking",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"COMPLETED\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/booking/{{bookingId}}",
              "host": ["{{baseUrl}}"],
              "path": ["booking", "{{bookingId}}"],
              "variable": [
                {
                  "key": "bookingId",
                  "value": "booking_id_here"
                }
              ]
            },
            "description": "Update booking status"
          }
        },
        {
          "name": "Delete Booking",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/booking/{{bookingId}}",
              "host": ["{{baseUrl}}"],
              "path": ["booking", "{{bookingId}}"],
              "variable": [
                {
                  "key": "bookingId",
                  "value": "booking_id_here"
                }
              ]
            },
            "description": "Delete a booking (Admin only)"
          }
        }
      ]
    },
    {
      "name": "Coupons",
      "item": [
        {
          "name": "Get All Coupons",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/coupons?page=1&limit=10&search=&isActive=",
              "host": ["{{baseUrl}}"],
              "path": ["coupons"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "search",
                  "value": ""
                },
                {
                  "key": "isActive",
                  "value": ""
                }
              ]
            },
            "description": "Get all coupons with pagination and filters"
          }
        },
        {
          "name": "Get Active Coupons",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/coupons/active",
              "host": ["{{baseUrl}}"],
              "path": ["coupons", "active"]
            },
            "description": "Get all active coupons"
          }
        },
        {
          "name": "Get Coupon by Code",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/coupons/code/{{couponCode}}",
              "host": ["{{baseUrl}}"],
              "path": ["coupons", "code", "{{couponCode}}"],
              "variable": [
                {
                  "key": "couponCode",
                  "value": "WELCOME10"
                }
              ]
            },
            "description": "Get coupon by its code"
          }
        },
        {
          "name": "Validate and Use Coupon",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/coupons/validate/{{couponCode}}",
              "host": ["{{baseUrl}}"],
              "path": ["coupons", "validate", "{{couponCode}}"],
              "variable": [
                {
                  "key": "couponCode",
                  "value": "WELCOME10"
                }
              ]
            },
            "description": "Validate and use a coupon"
          }
        },
        {
          "name": "Get Coupon by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/coupons/{{couponId}}",
              "host": ["{{baseUrl}}"],
              "path": ["coupons", "{{couponId}}"],
              "variable": [
                {
                  "key": "couponId",
                  "value": "coupon_id_here"
                }
              ]
            },
            "description": "Get coupon by ID"
          }
        },
        {
          "name": "Create Coupon",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"code\": \"WELCOME10\",\n  \"description\": \"Welcome discount for new customers\",\n  \"discount\": 10,\n  \"type\": \"FLAT\",\n  \"maxUses\": 100,\n  \"expiresAt\": \"2024-12-31T23:59:59Z\",\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/coupons",
              "host": ["{{baseUrl}}"],
              "path": ["coupons"]
            },
            "description": "Create a new coupon (Admin only)"
          }
        },
        {
          "name": "Update Coupon",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"Updated coupon description\",\n  \"discount\": 15,\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/coupons/{{couponId}}",
              "host": ["{{baseUrl}}"],
              "path": ["coupons", "{{couponId}}"],
              "variable": [
                {
                  "key": "couponId",
                  "value": "coupon_id_here"
                }
              ]
            },
            "description": "Update an existing coupon (Admin only)"
          }
        },
        {
          "name": "Delete Coupon",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/coupons/{{couponId}}",
              "host": ["{{baseUrl}}"],
              "path": ["coupons", "{{couponId}}"],
              "variable": [
                {
                  "key": "couponId",
                  "value": "coupon_id_here"
                }
              ]
            },
            "description": "Delete a coupon (Admin only)"
          }
        }
      ]
    },
    {
      "name": "Notifications",
      "item": [
        {
          "name": "Send Notification to User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Booking Confirmed\",\n  \"body\": \"Your car wash booking has been confirmed\",\n  \"userId\": \"user_id_here\",\n  \"type\": \"BOOKING_CREATED\",\n  \"data\": {\n    \"bookingId\": \"booking_id_here\",\n    \"action\": \"view_booking\"\n  },\n  \"imageUrl\": \"https://example.com/image.jpg\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/notifications/send",
              "host": ["{{baseUrl}}"],
              "path": ["notifications", "send"]
            },
            "description": "Send notification to a specific user (Admin only)"
          }
        },
        {
          "name": "Send Bulk Notification",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Service Update\",\n  \"body\": \"New car wash services are now available\",\n  \"userIds\": [\"user1_id\", \"user2_id\", \"user3_id\"],\n  \"type\": \"GENERAL\",\n  \"data\": {\n    \"category\": \"service_update\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/notifications/send-bulk",
              "host": ["{{baseUrl}}"],
              "path": ["notifications", "send-bulk"]
            },
            "description": "Send notification to multiple users (Admin only)"
          }
        },
        {
          "name": "Send Notification to Role",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"System Maintenance\",\n  \"body\": \"Scheduled maintenance will occur tonight from 2-4 AM\",\n  \"data\": {\n    \"maintenance\": \"true\",\n    \"startTime\": \"2024-01-01T02:00:00Z\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/notifications/send-to-role/{{role}}",
              "host": ["{{baseUrl}}"],
              "path": ["notifications", "send-to-role", "{{role}}"],
              "variable": [
                {
                  "key": "role",
                  "value": "CUSTOMER"
                }
              ]
            },
            "description": "Send notification to all users with a specific role (Admin only)"
          }
        },
        {
          "name": "Update Device Token",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"deviceToken\": \"new_device_token_here\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/notifications/device-token",
              "host": ["{{baseUrl}}"],
              "path": ["notifications", "device-token"]
            },
            "description": "Update current user's device token for push notifications"
          }
        },
        {
          "name": "Remove Device Token",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/notifications/device-token",
              "host": ["{{baseUrl}}"],
              "path": ["notifications", "device-token"]
            },
            "description": "Remove current user's device token"
          }
        },
        {
          "name": "Send Test Notification",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/notifications/test",
              "host": ["{{baseUrl}}"],
              "path": ["notifications", "test"]
            },
            "description": "Send a test notification to current user"
          }
        }
      ]
    },
    {
      "name": "Payment",
      "item": [
        {
          "name": "Payment Placeholder",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/payment",
              "host": ["{{baseUrl}}"],
              "path": ["payment"]
            },
            "description": "Payment endpoints are not yet implemented in the controller"
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// This script runs before every request in the collection",
          "console.log('Making request to: ' + pm.request.url);"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// This script runs after every request in the collection",
          "pm.test('Response time is less than 5000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "pm.test('Response has required headers', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});"
        ]
      }
    }
  ]
}